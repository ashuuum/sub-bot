from aiogram import Router, types, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from core.keyboards import get_main_keyboard
from core.app import get_subscriptions_db, del_subscription_db


router = Router()  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ ‚Äî –≤ –Ω–µ–≥–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Ö–µ–Ω–¥–ª–µ—Ä—ã


# --- –•–µ–Ω–¥–ª–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" ---
@router.message(F.text == "–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
async def edit_subscription(message: Message):
    user_id = message.from_user.id  # –ø–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è

    subscriptions = await get_subscriptions_db(user_id)  # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if subscriptions:
        # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ –æ–¥–Ω–æ–π –Ω–∞ –∫–∞–∂–¥—É—é –ø–æ–¥–ø–∏—Å–∫—É
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=sub[0],
                                  callback_data=f"delete_{sub[0]}")] for sub in subscriptions])
        # –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=keyboard)
    else:
        await message.answer("üö´ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫", reply_markup=get_main_keyboard())


# --- –•–µ–Ω–¥–ª–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π ---
@router.callback_query(F.data.startswith("delete_"))
async def process_delete_subscription(call: types.CallbackQuery):
    user_id = call.from_user.id
    name = call.data.replace("delete_", "")
    await del_subscription_db(user_id, name)  # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
    await call.message.answer(f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ '{name}' —É–¥–∞–ª–µ–Ω–∞!", reply_markup=get_main_keyboard())