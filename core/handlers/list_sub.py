from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
from core.app import get_subscriptions_db
from core.keyboards import get_main_keyboard


router = Router()  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ ‚Äî –≤ –Ω–µ–≥–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Ö–µ–Ω–¥–ª–µ—Ä—ã


# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–æ–∫ ---
def get_subscription_keyboard(subscriptions):
    buttons = []  # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    for i, (name, cost, end_date) in enumerate(subscriptions):
        formatted_end_date = datetime.strptime(end_date, '%Y-%m-%d').strftime('%d.%m.%Y')  # —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        button = InlineKeyboardButton(
            text=f"üì¶ {name} ({formatted_end_date})",
            callback_data=f"sub:{i}"
        )
        buttons.append([button])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


# --- –•–µ–Ω–¥–ª–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏" ---
@router.message(F.text == "–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
async def list_subscriptions(message: types.Message):
    user_id = message.from_user.id
    subscriptions = await get_subscriptions_db(user_id)

    if subscriptions:
        subscriptions.sort(key=lambda x: datetime.strptime(x[2], '%Y-%m-%d'))
        text = "üìã <b>–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
        keyboard = get_subscription_keyboard(subscriptions)
    else:
        text = "üö´ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫"
        keyboard = get_main_keyboard()

    await message.answer(text, reply_markup=keyboard, parse_mode='HTML')


# --- –•–µ–Ω–¥–ª–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ ---
@router.callback_query(F.data.startswith("sub:"))
async def show_subscription_details(callback: types.CallbackQuery):
    index = int(callback.data.split(":")[1])
    user_id = callback.from_user.id
    subscriptions = await get_subscriptions_db(user_id)

    if 0 <= index < len(subscriptions):
        name, cost, end_date = subscriptions[index]
        formatted_date = datetime.strptime(end_date, '%Y-%m-%d').strftime('%d.%m.%Y')
        text = (
            f"üìÑ <b>{name}</b>\n\n"
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å: <i>{int(cost)} ‚ÇΩ</i>\n"
            f"–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: <u>{formatted_date}</u>"
        )
        await callback.message.answer(text, reply_markup=get_main_keyboard(), parse_mode='HTML')

    await callback.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏"
